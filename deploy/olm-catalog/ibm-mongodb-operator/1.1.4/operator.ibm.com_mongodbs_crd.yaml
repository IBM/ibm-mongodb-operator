apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: mongodbs.operator.ibm.com
  labels:
    app.kubernetes.io/instance: mongodbs.operator.ibm.com
    app.kubernetes.io/managed-by: mongodbs.operator.ibm.com
    app.kubernetes.io/name: mongodbs.operator.ibm.com
spec:
  group: operator.ibm.com
  names:
    kind: MongoDB
    listKind: MongoDBList
    plural: mongodbs
    singular: mongodb
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MongoDB is the Schema for the mongodbs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MongoDBSpec defines the desired state of MongoDB
          properties:
            bootstrapImage:
              properties:
                tag:
                  type: string
              description: The image used to run the mongoDB process.
              type: object
            imageRegistry:
              type: string
              description: The image repository that has the images used for this deployment.
            initImage:
              properties:
                tag:
                  type: string
              description: The image used to initialize the envorinment for mongoDB.
              type: object
            metricsImage:
              properties:
                tag:
                  type: string
              description: The image used to export metric data.
              type: object
            replicas:
              type: integer
              description: The number of replicas of this database. Should be an odd number (1,3,5).
            storageClass:
              type: string
              description: The storage class for the persistent volume.
            resources:
              description: ResourceRequirements describes the compute resource
                requirements.
              properties:
                limits:
                  description: 'Limits describes the maximum amount of compute
                    resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  properties:
                    cpu:
                      description: 'Maximum amount of cpu amount allowed. 1000m = 1cpu'
                      type: string
                    memory:
                      description: 'Maximum amount of RAM to use. Units are Mi or Gi.'
                      type: string
                  type: object
                requests:
                  description: 'Requests describes the minimum amount of compute
                    resources required. If Requests is omitted for a container,
                    it defaults to Limits if that is explicitly specified, otherwise
                    to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  properties:
                    cpu:
                      description: 'Minimum amount of cpu amount allowed. 1000m = 1cpu'
                      type: string
                    memory:
                      description: 'Minimum amount of RAM to use. Units are Mi or Gi.'
                      type: string
                  type: object
              type: object
          type: object
        status:
          description: MongoDBStatus defines the observed state of MongoDB
          properties:
            storageClass:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
